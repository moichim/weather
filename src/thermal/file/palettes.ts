
/*
export const IRON = [
    "#00000a", "#000014", "#00001e", "#000025", "#00002a", "#00002e", "#000032", "#000036",
    "#00003a", "#00003e", "#000042", "#000046", "#00004a", "#00004f", "#000052", "#010055",
    "#010057", "#020059", "#02005c", "#03005e", "#040061", "#040063", "#050065", "#060067",
    "#070069", "#08006b", "#09006e", "#0a0070", "#0b0073", "#0c0074", "#0d0075", "#0d0076",
    "#0e0077", "#100078", "#120079", "#13007b", "#15007c", "#17007d", "#19007e", "#1b0080",
    "#1c0081", "#1e0083", "#200084", "#220085", "#240086", "#260087", "#280089", "#2a0089",
    "#2c008a", "#2e008b", "#30008c", "#32008d", "#34008e", "#36008e", "#38008f", "#390090",
    "#3b0091", "#3c0092", "#3e0093", "#3f0093", "#410094", "#420095", "#440095", "#450096",
    "#470096", "#490096", "#4a0096", "#4c0097", "#4e0097", "#4f0097", "#510097", "#520098",
    "#540098", "#560098", "#580099", "#5a0099", "#5c0099", "#5d009a", "#5f009a", "#61009b",
    "#63009b", "#64009b", "#66009b", "#68009b", "#6a009b", "#6c009c", "#6d009c", "#6f009c",
    "#70009c", "#71009d", "#73009d", "#75009d", "#77009d", "#78009d", "#7a009d", "#7c009d",
    "#7e009d", "#7f009d", "#81009d", "#83009d", "#84009d", "#86009d", "#87009d", "#89009d",
    "#8a009d", "#8b009d", "#8d009d", "#8f009c", "#91009c", "#93009c", "#95009c", "#96009b",
    "#98009b", "#99009b", "#9b009b", "#9c009b", "#9d009b", "#9f009b", "#a0009b", "#a2009b",
    "#a3009b", "#a4009b", "#a6009a", "#a7009a", "#a8009a", "#a90099", "#aa0099", "#ab0099",
    "#ad0099", "#ae0198", "#af0198", "#b00198", "#b00198", "#b10197", "#b20197", "#b30196",
    "#b40296", "#b50295", "#b60295", "#b70395", "#b80395", "#b90495", "#ba0495", "#ba0494",
    "#bb0593", "#bc0593", "#bd0593", "#be0692", "#bf0692", "#bf0692", "#c00791", "#c00791",
    "#c10890", "#c10990", "#c20a8f", "#c30a8e", "#c30b8e", "#c40c8d", "#c50c8c", "#c60d8b",
    "#c60e8a", "#c70f89", "#c81088", "#c91187", "#ca1286", "#ca1385", "#cb1385", "#cb1484",
    "#cc1582", "#cd1681", "#ce1780", "#ce187e", "#cf187c", "#cf197b", "#d01a79", "#d11b78",
    "#d11c76", "#d21c75", "#d21d74", "#d31e72", "#d32071", "#d4216f", "#d4226e", "#d5236b",
    "#d52469", "#d62567", "#d72665", "#d82764", "#d82862", "#d92a60", "#da2b5e", "#da2c5c",
    "#db2e5a", "#db2f57", "#dc2f54", "#dd3051", "#dd314e", "#de324a", "#de3347", "#df3444",
    "#df3541", "#df363d", "#e0373a", "#e03837", "#e03933", "#e13a30", "#e23b2d", "#e23c2a",
    "#e33d26", "#e33e23", "#e43f20", "#e4411d", "#e4421c", "#e5431b", "#e54419", "#e54518",
    "#e64616", "#e74715", "#e74814", "#e74913", "#e84a12", "#e84c10", "#e84c0f", "#e94d0e",
    "#e94d0d", "#ea4e0c", "#ea4f0c", "#eb500b", "#eb510a", "#eb520a", "#eb5309", "#ec5409",
    "#ec5608", "#ec5708", "#ec5808", "#ed5907", "#ed5a07", "#ed5b06", "#ee5c06", "#ee5c05",
    "#ee5d05", "#ee5e05", "#ef5f04", "#ef6004", "#ef6104", "#ef6204", "#f06303", "#f06403",
    "#f06503", "#f16603", "#f16603", "#f16703", "#f16803", "#f16902", "#f16a02", "#f16b02",
    "#f16b02", "#f26c01", "#f26d01", "#f26e01", "#f36f01", "#f37001", "#f37101", "#f37201",
    "#f47300", "#f47400", "#f47500", "#f47600", "#f47700", "#f47800", "#f47a00", "#f57b00",
    "#f57c00", "#f57e00", "#f57f00", "#f68000", "#f68100", "#f68200", "#f78300", "#f78400",
    "#f78500", "#f78600", "#f88700", "#f88800", "#f88800", "#f88900", "#f88a00", "#f88b00",
    "#f88c00", "#f98d00", "#f98d00", "#f98e00", "#f98f00", "#f99000", "#f99100", "#f99200",
    "#f99300", "#fa9400", "#fa9500", "#fa9600", "#fb9800", "#fb9900", "#fb9a00", "#fb9c00",
    "#fc9d00", "#fc9f00", "#fca000", "#fca100", "#fda200", "#fda300", "#fda400", "#fda600",
    "#fda700", "#fda800", "#fdaa00", "#fdab00", "#fdac00", "#fdad00", "#fdae00", "#feaf00",
    "#feb000", "#feb100", "#feb200", "#feb300", "#feb400", "#feb500", "#feb600", "#feb800",
    "#feb900", "#feb900", "#feba00", "#febb00", "#febc00", "#febd00", "#febe00", "#fec000",
    "#fec100", "#fec200", "#fec300", "#fec400", "#fec500", "#fec600", "#fec700", "#fec800",
    "#fec901", "#feca01", "#feca01", "#fecb01", "#fecc02", "#fecd02", "#fece03", "#fecf04",
    "#fecf04", "#fed005", "#fed106", "#fed308", "#fed409", "#fed50a", "#fed60a", "#fed70b",
    "#fed80c", "#fed90d", "#ffda0e", "#ffda0e", "#ffdb10", "#ffdc12", "#ffdc14", "#ffdd16",
    "#ffde19", "#ffde1b", "#ffdf1e", "#ffe020", "#ffe122", "#ffe224", "#ffe226", "#ffe328",
    "#ffe42b", "#ffe42e", "#ffe531", "#ffe635", "#ffe638", "#ffe73c", "#ffe83f", "#ffe943",
    "#ffea46", "#ffeb49", "#ffeb4d", "#ffec50", "#ffed54", "#ffee57", "#ffee5b", "#ffee5f",
    "#ffef63", "#ffef67", "#fff06a", "#fff06e", "#fff172", "#fff177", "#fff17b", "#fff280",
    "#fff285", "#fff28a", "#fff38e", "#fff492", "#fff496", "#fff49a", "#fff59e", "#fff5a2",
    "#fff5a6", "#fff6aa", "#fff6af", "#fff7b3", "#fff7b6", "#fff8ba", "#fff8bd", "#fff8c1",
    "#fff8c4", "#fff9c7", "#fff9ca", "#fff9cd", "#fffad1", "#fffad4", "#fffbd8", "#fffcdb",
    "#fffcdf", "#fffde2", "#fffde5", "#fffde8", "#fffeeb", "#fffeee", "#fffef1", "#fffef4",
    "#fffff6"];
    */

export const PALETTE = [
    "#000014", "#00001e", "#00002a", "#00002e", "#000036",
    "#00003e", "#000042", "#00004a", "#00004f", "#010055",
    "#020059", "#02005c", "#040061", "#040063", "#060067",
    "#08006b", "#09006e", "#0b0073", "#0c0074", "#0d0076",
    "#100078", "#120079", "#15007c", "#17007d", "#1b0080",
    "#1e0083", "#200084", "#240086", "#260087", "#2a0089",
    "#2e008b", "#30008c", "#34008e", "#36008e", "#390090",
    "#3c0092", "#3e0093", "#410094", "#420095", "#450096",
    "#490096", "#4a0096", "#4e0097", "#4f0097", "#520098",
    "#560098", "#580099", "#5c0099", "#5d009a", "#61009b",
    "#64009b", "#66009b", "#6a009b", "#6c009c", "#6f009c",
    "#71009d", "#73009d", "#77009d", "#78009d", "#7c009d",
    "#7f009d", "#81009d", "#84009d", "#86009d", "#89009d",
    "#8b009d", "#8d009d", "#91009c", "#93009c", "#96009b",
    "#99009b", "#9b009b", "#9d009b", "#9f009b", "#a2009b",
    "#a4009b", "#a6009a", "#a8009a", "#a90099", "#ab0099",
    "#ae0198", "#af0198", "#b00198", "#b10197", "#b30196",
    "#b50295", "#b60295", "#b80395", "#b90495", "#ba0494",
    "#bc0593", "#bd0593", "#bf0692", "#bf0692", "#c00791",
    "#c10990", "#c20a8f", "#c30b8e", "#c40c8d", "#c60d8b",
    "#c70f89", "#c81088", "#ca1286", "#ca1385", "#cb1484",
    "#cd1681", "#ce1780", "#cf187c", "#cf197b", "#d11b78",
    "#d21c75", "#d21d74", "#d32071", "#d4216f", "#d5236b",
    "#d62567", "#d72665", "#d82862", "#d92a60", "#da2c5c",
    "#db2f57", "#dc2f54", "#dd314e", "#de324a", "#df3444",
    "#df363d", "#e0373a", "#e03933", "#e13a30", "#e23c2a",
    "#e33e23", "#e43f20", "#e4421c", "#e5431b", "#e54518",
    "#e74715", "#e74814", "#e84a12", "#e84c10", "#e94d0e",
    "#ea4e0c", "#ea4f0c", "#eb510a", "#eb520a", "#ec5409",
    "#ec5708", "#ec5808", "#ed5a07", "#ed5b06", "#ee5c05",
    "#ee5e05", "#ef5f04", "#ef6104", "#ef6204", "#f06403",
    "#f16603", "#f16603", "#f16803", "#f16902", "#f16b02",
    "#f26c01", "#f26d01", "#f36f01", "#f37001", "#f37201",
    "#f47400", "#f47500", "#f47700", "#f47800", "#f57b00",
    "#f57e00", "#f57f00", "#f68100", "#f68200", "#f78400",
    "#f78600", "#f88700", "#f88800", "#f88900", "#f88b00",
    "#f98d00", "#f98d00", "#f98f00", "#f99000", "#f99200",
    "#fa9400", "#fa9500", "#fb9800", "#fb9900", "#fb9c00",
    "#fc9f00", "#fca000", "#fda200", "#fda300", "#fda600",
    "#fda800", "#fdaa00", "#fdac00", "#fdad00", "#feaf00",
    "#feb100", "#feb200", "#feb400", "#feb500", "#feb800",
    "#feb900", "#feba00", "#febc00", "#febd00", "#fec000",
    "#fec200", "#fec300", "#fec500", "#fec600", "#fec800",
    "#feca01", "#feca01", "#fecc02", "#fecd02", "#fecf04",
    "#fed005", "#fed106", "#fed409", "#fed50a", "#fed70b",
    "#fed90d", "#ffda0e", "#ffdb10", "#ffdc12", "#ffdd16",
    "#ffde1b", "#ffdf1e", "#ffe122", "#ffe224", "#ffe328",
    "#ffe42e", "#ffe531", "#ffe638", "#ffe73c", "#ffe943",
    "#ffeb49", "#ffeb4d", "#ffed54", "#ffee57", "#ffee5f",
    "#ffef67", "#fff06a", "#fff172", "#fff177", "#fff280",
    "#fff28a", "#fff38e", "#fff496", "#fff49a", "#fff5a2",
    "#fff6aa", "#fff6af", "#fff7b6", "#fff8ba", "#fff8c1",
    "#fff9c7", "#fff9ca", "#fffad1", "#fffad4", "#fffcdb",
    "#fffde2", "#fffde5", "#fffeeb", "#fffeee", "#fffef4",
];

const generateGrayscalePalette = () => {

    let result: string[] = [];

    for (let i = 0; i <= 255; i++) {

        result.push(`rgb(${i},${i},${i})`);

    }

    return result;

};


const JET = [
    "rgb( 0, 0, 127 )",
    "rgb( 0, 0, 131)",
    "rgb( 0, 0, 135)",
    "rgb( 0, 0, 139)",
    "rgb( 0, 0, 143)",
    "rgb( 0, 0, 147)",
    "rgb( 0, 0, 151)",
    "rgb( 0, 0, 155)",
    "rgb( 0, 0, 159)",
    "rgb( 0, 0, 163)",
    "rgb( 0, 0, 167)",
    "rgb( 0, 0, 171)",
    "rgb( 0, 0, 175)",
    "rgb( 0, 0, 179)",
    "rgb( 0, 0, 183)",
    "rgb( 0, 0, 187)",
    "rgb( 0, 0, 191)",
    "rgb( 0, 0, 195)",
    "rgb( 0, 0, 199)",
    "rgb( 0, 0, 203)",
    "rgb( 0, 0, 207)",
    "rgb( 0, 0, 211)",
    "rgb( 0, 0, 215)",
    "rgb( 0, 0, 219)",
    "rgb( 0, 0, 223)",
    "rgb( 0, 0, 227)",
    "rgb( 0, 0, 231)",
    "rgb( 0, 0, 235)",
    "rgb( 0, 0, 239)",
    "rgb( 0, 0, 243)",
    "rgb( 0, 0, 247)",
    "rgb( 0, 0, 251)",
    "rgb( 0, 0, 255)",
    "rgb( 0, 4, 255)",
    "rgb( 0, 8, 255)",
    "rgb( 0, 12, 255)",
    "rgb( 0, 16, 255)",
    "rgb( 0, 20, 255)",
    "rgb( 0, 24, 255)",
    "rgb( 0, 28, 255)",
    "rgb( 0, 32, 255)",
    "rgb( 0, 36, 255)",
    "rgb( 0, 40, 255)",
    "rgb( 0, 44, 255)",
    "rgb( 0, 48, 255)",
    "rgb( 0, 52, 255)",
    "rgb( 0, 56, 255)",
    "rgb( 0, 60, 255)",
    "rgb( 0, 64, 255)",
    "rgb( 0, 68, 255)",
    "rgb( 0, 72, 255)",
    "rgb( 0, 76, 255)",
    "rgb( 0, 80, 255)",
    "rgb( 0, 84, 255)",
    "rgb( 0, 88, 255)",
    "rgb( 0, 92, 255)",
    "rgb( 0, 96, 255)",
    "rgb( 0, 100, 255)",
    "rgb( 0, 104, 255)",
    "rgb( 0, 108, 255)",
    "rgb( 0, 112, 255)",
    "rgb( 0, 116, 255)",
    "rgb( 0, 120, 255)",
    "rgb( 0, 124, 255)",
    "rgb( 0, 128, 255)",
    "rgb( 0, 132, 255)",
    "rgb( 0, 136, 255)",
    "rgb( 0, 140, 255)",
    "rgb( 0, 144, 255)",
    "rgb( 0, 148, 255)",
    "rgb( 0, 152, 255)",
    "rgb( 0, 156, 255)",
    "rgb( 0, 160, 255)",
    "rgb( 0, 164, 255)",
    "rgb( 0, 168, 255)",
    "rgb( 0, 172, 255)",
    "rgb( 0, 176, 255)",
    "rgb( 0, 180, 255)",
    "rgb( 0, 184, 255)",
    "rgb( 0, 188, 255)",
    "rgb( 0, 192, 255)",
    "rgb( 0, 196, 255)",
    "rgb( 0, 200, 255)",
    "rgb( 0, 204, 255)",
    "rgb( 0, 208, 255)",
    "rgb( 0, 212, 255)",
    "rgb( 0, 216, 255)",
    "rgb( 0, 220, 255)",
    "rgb( 0, 224, 255)",
    "rgb( 0, 228, 255)",
    "rgb( 0, 232, 255)",
    "rgb( 0, 236, 255)",
    "rgb( 0, 240, 255)",
    "rgb( 0, 244, 255)",
    "rgb( 0, 248, 255)",
    "rgb( 0, 252, 255)",
    "rgb( 1, 255, 253)",
    "rgb( 5, 255, 249)",
    "rgb( 9, 255, 245)",
    "rgb( 13, 255, 241)",
    "rgb( 17, 255, 237)",
    "rgb( 21, 255, 233)",
    "rgb( 25, 255, 229)",
    "rgb( 29, 255, 225)",
    "rgb( 33, 255, 221)",
    "rgb( 37, 255, 217)",
    "rgb( 41, 255, 213)",
    "rgb( 45, 255, 209)",
    "rgb( 49, 255, 205)",
    "rgb( 53, 255, 201)",
    "rgb( 57, 255, 197)",
    "rgb( 61, 255, 193)",
    "rgb( 65, 255, 189)",
    "rgb( 69, 255, 185)",
    "rgb( 73, 255, 181)",
    "rgb( 77, 255, 177)",
    "rgb( 81, 255, 173)",
    "rgb( 85, 255, 169)",
    "rgb( 89, 255, 165)",
    "rgb( 93, 255, 161)",
    "rgb( 97, 255, 157)",
    "rgb( 101, 255, 153)",
    "rgb( 105, 255, 149)",
    "rgb( 109, 255, 145)",
    "rgb( 113, 255, 141)",
    "rgb( 117, 255, 137)",
    "rgb( 121, 255, 133)",
    "rgb( 125, 255, 129)",
    "rgb( 129, 255, 125)",
    "rgb( 133, 255, 121)",
    "rgb( 137, 255, 117)",
    "rgb( 141, 255, 113)",
    "rgb( 145, 255, 109)",
    "rgb( 149, 255, 105)",
    "rgb( 153, 255, 101)",
    "rgb( 157, 255, 97)",
    "rgb( 161, 255, 93)",
    "rgb( 165, 255, 89)",
    "rgb( 169, 255, 85)",
    "rgb( 173, 255, 81)",
    "rgb( 177, 255, 77)",
    "rgb( 181, 255, 73)",
    "rgb( 185, 255, 69)",
    "rgb( 189, 255, 65)",
    "rgb( 193, 255, 61)",
    "rgb( 197, 255, 57)",
    "rgb( 201, 255, 53)",
    "rgb( 205, 255, 49)",
    "rgb( 209, 255, 45)",
    "rgb( 213, 255, 41)",
    "rgb( 217, 255, 37)",
    "rgb( 221, 255, 33)",
    "rgb( 225, 255, 29)",
    "rgb( 229, 255, 25)",
    "rgb( 233, 255, 21)",
    "rgb( 237, 255, 17)",
    "rgb( 241, 255, 13)",
    "rgb( 245, 255, 9)",
    "rgb( 249, 255, 5)",
    "rgb( 253, 255, 1)",
    "rgb( 255, 252, 1)",
    "rgb( 255, 248, 1)",
    "rgb( 255, 244, 1)",
    "rgb( 255, 240, 1)",
    "rgb( 255, 236, 1)",
    "rgb( 255, 232, 1)",
    "rgb( 255, 228, 1)",
    "rgb( 255, 224, 1)",
    "rgb( 255, 220, 1)",
    "rgb( 255, 216, 1)",
    "rgb( 255, 212, 1)",
    "rgb( 255, 208, 1)",
    "rgb( 255, 204, 1)",
    "rgb( 255, 200, 1)",
    "rgb( 255, 196, 1)",
    "rgb( 255, 192, 1)",
    "rgb( 255, 188, 1)",
    "rgb( 255, 184, 1)",
    "rgb( 255, 180, 1)",
    "rgb( 255, 176, 1)",
    "rgb( 255, 172, 1)",
    "rgb( 255, 168, 1)",
    "rgb( 255, 164, 1)",
    "rgb( 255, 160, 1)",
    "rgb( 255, 156, 1)",
    "rgb( 255, 152, 1)",
    "rgb( 255, 148, 1)",
    "rgb( 255, 144, 1)",
    "rgb( 255, 140, 1)",
    "rgb( 255, 136, 1)",
    "rgb( 255, 132, 1)",
    "rgb( 255, 128, 1)",
    "rgb( 255, 124, 1)",
    "rgb( 255, 120, 1)",
    "rgb( 255, 116, 1)",
    "rgb( 255, 112, 1)",
    "rgb( 255, 108, 1)",
    "rgb( 255, 104, 1)",
    "rgb( 255, 100, 1)",
    "rgb( 255, 96, 1)",
    "rgb( 255, 92, 1)",
    "rgb( 255, 88, 1)",
    "rgb( 255, 84, 1)",
    "rgb( 255, 80, 1)",
    "rgb( 255, 76, 1)",
    "rgb( 255, 72, 1)",
    "rgb( 255, 68, 1)",
    "rgb( 255, 64, 1)",
    "rgb( 255, 60, 1)",
    "rgb( 255, 56, 1)",
    "rgb( 255, 52, 1)",
    "rgb( 255, 48, 1)",
    "rgb( 255, 44, 1)",
    "rgb( 255, 40, 1)",
    "rgb( 255, 36, 1)",
    "rgb( 255, 32, 1)",
    "rgb( 255, 28, 1)",
    "rgb( 255, 24, 1)",
    "rgb( 255, 20, 1)",
    "rgb( 255, 16, 1)",
    "rgb( 255, 12, 1)",
    "rgb( 255, 8, 1)",
    "rgb( 255, 4, 1)",
    "rgb( 255, 0, 1)",
    "rgb( 251, 0, 1)",
    "rgb( 247, 0, 1)",
    "rgb( 243, 0, 1)",
    "rgb( 239, 0, 1)",
    "rgb( 235, 0, 1)",
    "rgb( 231, 0, 1)",
    "rgb( 227, 0, 1)",
    "rgb( 223, 0, 1)",
    "rgb( 219, 0, 1)",
    "rgb( 215, 0, 1)",
    "rgb( 211, 0, 1)",
    "rgb( 207, 0, 1)",
    "rgb( 203, 0, 1)",
    "rgb( 199, 0, 1)",
    "rgb( 195, 0, 1)",
    "rgb( 191, 0, 1)",
    "rgb( 187, 0, 1)",
    "rgb( 183, 0, 1)",
    "rgb( 179, 0, 1)",
    "rgb( 175, 0, 1)",
    "rgb( 171, 0, 1)",
    "rgb( 167, 0, 1)",
    "rgb( 163, 0, 1)",
    "rgb( 159, 0, 1)",
    "rgb( 155, 0, 1)",
    "rgb( 151, 0, 1)",
    "rgb( 147, 0, 1)",
    "rgb( 143, 0, 1)",
    "rgb( 139, 0, 1)",
    "rgb( 135, 0, 1)",
    "rgb( 131, 0, 1)",
    "rgb( 127, 0, 1)",
];


const IRON = [
"rgb( 0, 0, 0 )",
"rgb(0, 0, 13 )",
"rgb(0, 0, 29 )",
"rgb(0, 0, 39 )",
"rgb(0, 0, 46 )",
"rgb(0, 0, 53 )",
"rgb(0, 0, 60 )",
"rgb(0, 0, 67 )",
"rgb(0, 0, 74 )",
"rgb(0, 0, 81 )",
"rgb(1, 0, 85 )",
"rgb(2, 0, 89 )",
"rgb(3, 0, 94 )",
"rgb(4, 0, 98 )",
"rgb(5, 0, 101 )",
"rgb(6, 0, 105 )",
"rgb(8, 0, 109 )",
"rgb(10, 0, 113 )",
"rgb(12, 0, 116 )",
"rgb(13, 0, 118 )",
"rgb(15, 0, 120 )",
"rgb(18, 0, 121 )",
"rgb(21, 0, 123 )",
"rgb(24, 0, 126 )",
"rgb(27, 0, 128 )",
"rgb(30, 0, 130 )",
"rgb(33, 0, 133 )",
"rgb(37, 0, 135 )",
"rgb(40, 0, 137 )",
"rgb(44, 0, 138 )",
"rgb(47, 0, 140 )",
"rgb(50, 0, 141 )",
"rgb(53, 0, 142 )",
"rgb(57, 0, 144 )",
"rgb(59, 0, 145 )",
"rgb(62, 0, 147 )",
"rgb(64, 0, 148 )",
"rgb(67, 0, 149 )",
"rgb(70, 0, 150 )",
"rgb(72, 0, 150 )",
"rgb(75, 0, 151 )",
"rgb(78, 0, 151 )",
"rgb(81, 0, 151 )",
"rgb(84, 0, 152 )",
"rgb(87, 0, 152 )",
"rgb(90, 0, 153 )",
"rgb(93, 0, 154 )",
"rgb(96, 0, 155 )",
"rgb(99, 0, 155 )",
"rgb(102, 0, 155 )",
"rgb(105, 0, 155 )",
"rgb(108, 0, 156 )",
"rgb(111, 0, 156 )",
"rgb(113, 0, 157 )",
"rgb(116, 0, 157 )",
"rgb(119, 0, 157 )",
"rgb(122, 0, 157 )",
"rgb(125, 0, 157 )",
"rgb(128, 0, 157 )",
"rgb(131, 0, 157 )",
"rgb(133, 0, 157 )",
"rgb(136, 0, 157 )",
"rgb(138, 0, 157 )",
"rgb(141, 0, 157 )",
"rgb(144, 0, 156 )",
"rgb(148, 0, 156 )",
"rgb(150, 0, 155 )",
"rgb(153, 0, 155 )",
"rgb(155, 0, 155 )",
"rgb(158, 0, 155 )",
"rgb(160, 0, 155 )",
"rgb(162, 0, 155 )",
"rgb(165, 0, 154 )",
"rgb(167, 0, 154 )",
"rgb(169, 0, 154 )",
"rgb(171, 0, 153 )",
"rgb(173, 0, 153 )",
"rgb(175, 1, 152 )",
"rgb(176, 1, 152 )",
"rgb(177, 1, 151 )",
"rgb(179, 1, 150 )",
"rgb(181, 2, 149 )",
"rgb(183, 2, 149 )",
"rgb(184, 3, 149 )",
"rgb(185, 4, 149 )",
"rgb(187, 5, 148 )",
"rgb(188, 5, 147 )",
"rgb(190, 6, 146 )",
"rgb(191, 6, 146 )",
"rgb(192, 7, 145 )",
"rgb(193, 8, 144 )",
"rgb(194, 9, 143 )",
"rgb(195, 11, 142 )",
"rgb(196, 12, 141 )",
"rgb(198, 13, 139 )",
"rgb(199, 14, 138 )",
"rgb(200, 16, 136 )",
"rgb(202, 18, 134 )",
"rgb(202, 19, 133 )",
"rgb(204, 21, 131 )",
"rgb(205, 22, 129 )",
"rgb(206, 23, 126 )",
"rgb(207, 25, 123 )",
"rgb(208, 26, 121 )",
"rgb(209, 28, 118 )",
"rgb(210, 29, 116 )",
"rgb(211, 31, 114 )",
"rgb(212, 33, 111 )",
"rgb(213, 35, 108 )",
"rgb(214, 37, 104 )",
"rgb(215, 38, 101 )",
"rgb(216, 40, 98 )",
"rgb(218, 43, 95 )",
"rgb(219, 45, 91 )",
"rgb(219, 47, 87 )",
"rgb(220, 48, 82 )",
"rgb(221, 50, 76 )",
"rgb(222, 52, 71 )",
"rgb(223, 53, 65 )",
"rgb(224, 55, 59 )",
"rgb(224, 56, 54 )",
"rgb(225, 58, 48 )",
"rgb(226, 60, 42 )",
"rgb(227, 62, 37 )",
"rgb(228, 64, 31 )",
"rgb(228, 66, 28 )",
"rgb(229, 67, 26 )",
"rgb(230, 69, 23 )",
"rgb(230, 71, 22 )",
"rgb(231, 73, 19 )",
"rgb(232, 74, 18 )",
"rgb(232, 76, 16 )",
"rgb(233, 77, 14 )",
"rgb(234, 78, 12 )",
"rgb(234, 80, 11 )",
"rgb(235, 82, 10 )",
"rgb(235, 84, 9 )",
"rgb(236, 86, 8 )",
"rgb(236, 87, 8 )",
"rgb(237, 89, 7 )",
"rgb(237, 91, 6 )",
"rgb(238, 92, 5 )",
"rgb(238, 94, 5 )",
"rgb(239, 95, 4 )",
"rgb(239, 97, 4 )",
"rgb(240, 99, 3 )",
"rgb(240, 100, 3 )",
"rgb(241, 102, 3 )",
"rgb(241, 103, 3 )",
"rgb(241, 105, 2 )",
"rgb(241, 106, 2 )",
"rgb(241, 107, 2 )",
"rgb(242, 109, 1 )",
"rgb(242, 111, 1 )",
"rgb(243, 112, 1 )",
"rgb(243, 114, 1 )",
"rgb(244, 115, 0 )",
"rgb(244, 117, 0 )",
"rgb(244, 119, 0 )",
"rgb(244, 121, 0 )",
"rgb(245, 123, 0 )",
"rgb(245, 126, 0 )",
"rgb(246, 128, 0 )",
"rgb(246, 129, 0 )",
"rgb(247, 131, 0 )",
"rgb(247, 133, 0 )",
"rgb(247, 135, 0 )",
"rgb(248, 136, 0 )",
"rgb(248, 137, 0 )",
"rgb(248, 139, 0 )",
"rgb(248, 140, 0 )",
"rgb(249, 142, 0 )",
"rgb(249, 143, 0 )",
"rgb(249, 144, 0 )",
"rgb(249, 146, 0 )",
"rgb(250, 148, 0 )",
"rgb(250, 150, 0 )",
"rgb(251, 152, 0 )",
"rgb(251, 155, 0 )",
"rgb(252, 157, 0 )",
"rgb(252, 159, 0 )",
"rgb(253, 161, 0 )",
"rgb(253, 163, 0 )",
"rgb(253, 165, 0 )",
"rgb(253, 168, 0 )",
"rgb(253, 170, 0 )",
"rgb(253, 172, 0 )",
"rgb(253, 173, 0 )",
"rgb(254, 175, 0 )",
"rgb(254, 177, 0 )",
"rgb(254, 178, 0 )",
"rgb(254, 180, 0 )",
"rgb(254, 182, 0 )",
"rgb(254, 184, 0 )",
"rgb(254, 186, 0 )",
"rgb(254, 187, 0 )",
"rgb(254, 189, 0 )",
"rgb(254, 191, 0 )",
"rgb(254, 193, 0 )",
"rgb(254, 195, 0 )",
"rgb(254, 197, 0 )",
"rgb(254, 199, 0 )",
"rgb(254, 200, 0 )",
"rgb(254, 202, 1 )",
"rgb(254, 203, 1 )",
"rgb(254, 204, 2 )",
"rgb(254, 206, 3 )",
"rgb(254, 207, 4 )",
"rgb(254, 209, 6 )",
"rgb(254, 211, 8 )",
"rgb(254, 213, 9 )",
"rgb(254, 214, 11 )",
"rgb(254, 216, 12 )",
"rgb(255, 218, 14 )",
"rgb(255, 219, 15 )",
"rgb(255, 220, 19 )",
"rgb(255, 221, 23 )",
"rgb(255, 222, 27 )",
"rgb(255, 224, 31 )",
"rgb(255, 225, 35 )",
"rgb(255, 226, 38 )",
"rgb(255, 228, 42 )",
"rgb(255, 229, 48 )",
"rgb(255, 230, 53 )",
"rgb(255, 231, 59 )",
"rgb(255, 233, 65 )",
"rgb(255, 234, 71 )",
"rgb(255, 235, 76 )",
"rgb(255, 237, 83 )",
"rgb(255, 238, 89 )",
"rgb(255, 239, 95 )",
"rgb(255, 239, 102 )",
"rgb(255, 240, 109 )",
"rgb(255, 241, 115 )",
"rgb(255, 241, 123 )",
"rgb(255, 242, 132 )",
"rgb(255, 243, 139 )",
"rgb(255, 244, 146 )",
"rgb(255, 244, 153 )",
"rgb(255, 245, 160 )",
"rgb(255, 245, 167 )",
"rgb(255, 246, 174 )",
"rgb(255, 247, 181 )",
"rgb(255, 248, 187 )",
"rgb(255, 248, 193 )",
"rgb(255, 249, 198 )",
"rgb(255, 249, 203 )",
"rgb(255, 250, 209 )",
"rgb(255, 251, 215 )",
"rgb(255, 252, 221 )",
"rgb(255, 253, 227 )",
"rgb(255, 253, 232 )",
"rgb(255, 254, 237 )",
"rgb(255, 254, 242 )",
"rgb(255, 255, 247 )",
"rgb(255, 255, 249 )",
];

export const GRAYSCALE = generateGrayscalePalette();

export const ThermalPalettes: {
    [index: string]: ThermalPalette
} = {
    iron: {
        pixels: IRON,
        name: "paleta IRON",
        gradient: "linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(10,12,77,1) 30%, rgba(86,20,101,1) 49%, rgba(255,0,0,1) 64%, rgba(249,255,0,1) 84%, rgba(255,255,255,1) 100%)"
    },
    jet: {
        pixels: JET,
        name: "paleta JET",
        gradient: "linear-gradient(90deg, rgba(31,0,157,1) 0%, rgba(0,5,255,1) 8%, rgba(0,255,239,1) 36%, rgba(255,252,0,1) 66%, rgba(255,2,0,1) 94%, rgba(145,0,0,1) 100%)"
    },
    grayscale: {
        pixels: GRAYSCALE,
        name: "Stupně šedé",
        gradient: "linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)"
    }
}

export type ThermalPalette = {
    pixels: string[],
    name: string,
    gradient: string
}